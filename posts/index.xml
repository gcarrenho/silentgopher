<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Silent Gopher</title><link>https://silentgopher.dev/posts/</link><description>Recent content in Posts on Silent Gopher</description><generator>Hugo</generator><language>es</language><lastBuildDate>Thu, 31 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://silentgopher.dev/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Parte 2: Aplicando Component-Based Clean Architecture en Go</title><link>https://silentgopher.dev/posts/package-by-component/</link><pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate><guid>https://silentgopher.dev/posts/package-by-component/</guid><description>&lt;blockquote>
&lt;p>💡 ADVERTENCIA: Si esperas copy-paste perfecto, mejor ve a StackOverflow.
Esto es código real con cicatrices, donde el 60% funcionó al primer intento y el otro 40% nos hizo llorar en el refactor.&lt;/p>&lt;/blockquote>
&lt;h2 id="-el-proyecto-que-casi-me-quema-los-párpados">🚧 El Proyecto que casi me Quema los Párpados&lt;/h2>
&lt;p>Hace varios meses, heredé un monolito en Go donde:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>users&lt;/code> y &lt;code>orders&lt;/code> compartían structs como si fueran confesiones de borrachos.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Un cambio en &lt;code>User.Email&lt;/code> rompía 3 servicios distintos.&lt;/p></description></item><item><title>Parte 1: Entendiendo Clean Architecture Más Allá del Diagrama</title><link>https://silentgopher.dev/posts/clean-architecture/</link><pubDate>Wed, 30 Jul 2025 00:00:00 +0000</pubDate><guid>https://silentgopher.dev/posts/clean-architecture/</guid><description>&lt;blockquote>
&lt;p>⚠️ &lt;strong>Advertencia&lt;/strong>: Esto no es otro artículo teórico con diagramas bonitos que solo funcionan en PowerPoint.
Hablaré de fracasos, de cómo &lt;strong>mis primeros intentos con Clean Architecture fueron un desastre&lt;/strong>, y de la solución que finalmente funcionó en proyectos reales (con deadlines, jefes impacientes y requirements que cambian cada martes).&lt;/p>&lt;/blockquote></description></item></channel></rss>